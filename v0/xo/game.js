const board=[[0,0,0],[0,0,0],[0,0,0]];let currentPlayer=1,gameEnd=!1,scores={one:0,two:0,draws:0};const cells=document.querySelectorAll("td");function checkWin(){for(let e=0;e<3;e++)if(board[e][0]===currentPlayer&&board[e][1]===currentPlayer&&board[e][2]===currentPlayer)return!0;for(let e=0;e<3;e++)if(board[0][e]===currentPlayer&&board[1][e]===currentPlayer&&board[2][e]===currentPlayer)return!0;return board[0][0]===currentPlayer&&board[1][1]===currentPlayer&&board[2][2]===currentPlayer||board[0][2]===currentPlayer&&board[1][1]===currentPlayer&&board[2][0]===currentPlayer}function checkDraw(){for(let e=0;e<3;e++)for(let r=0;r<3;r++)if(0===board[e][r])return!1;return!0}function resetGame(){board.forEach((e=>e.fill(0))),currentPlayer=1,gameEnd=!1,cells.forEach((e=>e.textContent="")),document.querySelector("#message").textContent=""}function handleCellClick(e){if(gameEnd)return;const r=e.target,t=r.parentNode.rowIndex,n=r.cellIndex;0===board[t][n]&&(board[t][n]=currentPlayer,r.textContent=1===currentPlayer?"X":"O",r.classList.remove("player-1"),r.classList.remove("player-2"),r.classList.add(`player-${currentPlayer}`),checkWin()?(document.querySelector("#message").textContent=`Player ${currentPlayer} wins!`,updateScore(currentPlayer,1),gameEnd=!0):checkDraw()?(document.querySelector("#message").textContent="Game is a draw!",updateScore(-1,1),gameEnd=!0):currentPlayer=1===currentPlayer?2:1,console.log(`p1: ${scores[0]} p2: ${scores[1]}`))}function updateScore(e,r){if(e>scores.length)return console.error("Player number out of bounds");0==e?scores.one+=r:1==e?scores.two+=r:-1==e&&(scores.draws+=r),document.getElementById("score-one").textContent=`Player 1: ${scores.one}`,document.getElementById("score-two").textContent=`Player 2: ${scores.two}`,document.getElementById("score-draws").textContent=`Draws: ${scores.draws}`}cells.forEach((e=>e.addEventListener("click",handleCellClick))),document.querySelector("#reset-button").addEventListener("click",resetGame);